#==============================================================================
# ■ 皮革的AI
#==============================================================================
class LeatherB_AI < Game_BattlerAI
  #--------------------------------------------------------------------------
  # ○ 物件初始化
  #--------------------------------------------------------------------------
  def initialize(battler)
    @target_distance_x_max = 180  # 攻擊行動最高 X 距離
    @target_distance_x_min = 100   # 攻擊行動最低 X 距離
    @target_distance_y_min = 0   # 攻擊行動最低 Y 距離
    @target_distance_y_max = 10   # 攻擊行動最高 Y 距離
    super(battler)
    determine_set
    @now_run = 0
    # 接技自重度
    case  @ai_level
    when 0
      @combo_limit = 2
    when 1
      @combo_limit = 4
    when 2
      @combo_limit = 6
    when 3
      @combo_limit = 12
    end
  end
  
  #--------------------------------------------------------------------------
  # ■ 判定用變數
  #--------------------------------------------------------------------------
  def determine_set
    @combohold_count = 0  # 共通，AI接技自重計算
    @combo_list = []  # 共通，接技表
    @ai_trigger = {}  
  end 
  

   
#==============================================================================
# ■ 連段自重
#==============================================================================
  def action_prudent
    return ((@ai_level == 0 and @target.combohit > 2) or (@ai_level == 1 and @target.combohit > 4) or 
    (@ai_level == 2 and @target.combohit > 6))
  end
  
#==============================================================================
# ■ AI反應
#==============================================================================
  def can_reaction?
    result = true
    case @ai_level
    when 0
      if @me.motion.freemove? and @target.motion.state_time > 10
        result = true
      elsif @me.motion.attacking?
        result = true
      else
        result = false
      end
    when 1
      if @me.motion.freemove? and @target.motion.state_time > 5
        result = true
      elsif @me.motion.attacking?
        result = true
      else
        result = false
      end
    when 2
      if @me.motion.freemove? and @target.motion.state_time > 2
        result = true
      elsif @me.motion.attacking?
        result = true
      else
        result = false
      end
    end
    return result
  end 
#==============================================================================
# ■ 出招判斷
#==============================================================================
  
  #-------------------------------------------------------------------------------
  # ○ Z
  #-------------------------------------------------------------------------------
  def can_z?
  end
  #-------------------------------------------------------------------------------
  # ○ →Z
  #-------------------------------------------------------------------------------
  def can_fz?
  end
  #-------------------------------------------------------------------------------
  # ○ ↓Z
  #-------------------------------------------------------------------------------
  def can_dz?
  end
  
  #-------------------------------------------------------------------------------
  # ○ ←Z
  #-------------------------------------------------------------------------------
  def can_bz?
  end
  #-------------------------------------------------------------------------------
  # ○ X
  #-------------------------------------------------------------------------------
  def can_x?
  end
  #-------------------------------------------------------------------------------
  # ○ →X
  #-------------------------------------------------------------------------------
  def can_fx?
  end
  #-------------------------------------------------------------------------------
  # ○ ↓X
  #-------------------------------------------------------------------------------
  def can_dx?
  end
  #-------------------------------------------------------------------------------
  # ○ ←X
  #-------------------------------------------------------------------------------
  def can_bx?
  end

  
  #-------------------------------------------------------------------------------
  # ○ 前追擊
  #-------------------------------------------------------------------------------
  def can_fc?
  end
  #-------------------------------------------------------------------------------
  # ○ 後追擊(迴避)
  #-------------------------------------------------------------------------------
  def can_bc?
  end
  #-------------------------------------------------------------------------------
  # ○ 上追擊
  #-------------------------------------------------------------------------------
  def can_uc?
  end
  #-------------------------------------------------------------------------------
  # ○ 下追擊
  #-------------------------------------------------------------------------------
  def can_dc?
  end
  #-------------------------------------------------------------------------------
  # ○ 跳躍追擊
  #-------------------------------------------------------------------------------
  def can_jump_c?
  end
#==============================================================================
# ■ 迴避/防禦判斷
#==============================================================================
  
  #-------------------------------------------------------------------------------
  # ○ 前迴避
  #-------------------------------------------------------------------------------
  def can_fflee?
  end
  #-------------------------------------------------------------------------------
  # ○ 後迴避
  #-------------------------------------------------------------------------------
  def can_bflee?
  end
  #-------------------------------------------------------------------------------
  # ○ 可以受身
  #-------------------------------------------------------------------------------
  def can_ukemi?
  end
  #-------------------------------------------------------------------------------
  # ○ 瞬間防禦
  #-------------------------------------------------------------------------------
  def can_timely_guard?
  end
  
  #--------------------------------------------------------------------------
  # ○ 偵測飛行道具威脅
  #--------------------------------------------------------------------------
  def search_bullet
  end
  
  #-------------------------------------------------------------------------------
  # ○ 跳躍
  #-------------------------------------------------------------------------------
  def can_jump?
  end
  #-------------------------------------------------------------------------------
  # ○ 跑步
  #-------------------------------------------------------------------------------
  def can_run?
  end
  
  #-------------------------------------------------------------------------------
  # ○ 走路
  #-------------------------------------------------------------------------------
  def can_walk?
  end

  
  #-------------------------------------------------------------------------------
  # ○ 什麼也不做
  #-------------------------------------------------------------------------------
  def do_nothing?
  end

  #--------------------------------------------------------------------------
  # ○ 記下被打臉的技能
  #--------------------------------------------------------------------------
  def counter_memory(action)
  end
  
  #--------------------------------------------------------------------------
  # ○ 定期更新 - 特定變數計時
  #--------------------------------------------------------------------------
  def update_value_timecount
    @now_run += 1 if @me.motion.freemove? and !@me.motion.static? and @now_run < 111
    @guard_duration -= 1 if @guard_duration > 0
  end
  
  #--------------------------------------------------------------------------
  # ○ 更新行為
  #--------------------------------------------------------------------------
  def update_behavior_phase(sign)

    return if !@me.motion.freemove?

    
 #   if can_guard? # 起動防禦
   #  do_guard
   #   @guard_duration = 5
    #  return
   # end
    
    # 防禦
   # if @guard_duration > 0 
    #  do_guard
    #  return
   # end
    
    
    case @now_run
    when 0..30
      turn_to_target
      @me.motion.do_dash(-sign)
    when 31..60
      turn_to_target
      @me.motion.do_dash(sign)
    when 61
      turn_to_target
      @me.motion.change_anime("stand")
    when 111
      turn_to_target
      if @ai_level == 3
        # 距離太遠
        if dist_x > 380  
          case @ai_random 
          when 0...600 # 泰山壓頂
            @me.motion.change_anime("skill4")
          else  # 飛葉快刀
            @me.motion.change_anime("skill5")
          end 
        else
          case @ai_random 
          when 0...350  # 致命撞擊
            @me.motion.change_anime("skill2")
          when 350...550 # 飛葉快刀
            @me.motion.change_anime("skill5")
          when 550...800 # 泰山壓頂
            @me.motion.change_anime("skill4")
          else # 踐踏
            @me.motion.change_anime("skill3")
          end 
        end
      elsif @ai_level == 2
        # 距離太遠
        if dist_x > 380  
          case @ai_random 
          when 0...300 # 飛撲
            @me.motion.change_anime("skill4")
          else  # 飛葉快刀
            @me.motion.change_anime("skill5")
          end 
        else
          case @ai_random 
          when 0...250  # 致命撞擊
            @me.motion.change_anime("skill2")
          when 250...450 # 飛葉快刀
            @me.motion.change_anime("skill5")
          when 450...800 # 飛撲
            @me.motion.change_anime("skill4")
          else # 踐踏
            @me.motion.change_anime("skill3")
          end 
        end
      else
        @me.motion.change_anime("skill")
      end
      @now_run = 0
  #  else
   #   @now_run = 0
    end
    
    #do_next
    # 努力的往前跑！！
   # @me.motion.fs_action if @me.awake_time >= 1200
    #@me.motion.do_dash(1)   if @me.motion.controllable?
  end
  
end
